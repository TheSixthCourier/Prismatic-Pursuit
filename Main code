import pygame
import random
pygame.init()
screen = pygame.display.set_mode((1800, 800))
pygame.display.set_caption('Side-Scroller')
clock = pygame.time.Clock()


background = pygame.image.load("Background.png")
#Initializations above

# xpos = 0
# ypos = 550
# mousePos = (xpos, ypos) #variable mousePos stores TWO numbers
# numClicks = 0
xPositions = []
yPositions = []

player = [100, 500, 0, 0]
isOnGround = False
offset = 0
platforms = [(500, 400), (700, 300)]


#___________________________________________________________________________________________________________
def move_player():
    global isOnGround
    global offset
    print(offset)
    if keys[pygame.K_LEFT]:
        player[2] = -10
    elif keys[pygame.K_RIGHT]:
         player[2] = 10
         
    else:
        player[2] = 0
    
    if isOnGround == False:
        player[3] += 1

    if isOnGround == True and keys[pygame.K_UP]:
        player[3] = -20
        isOnGround = False

    if player[0] < 0 or player[0] > 800:
        player[0] = 0
        print("Can't go that way.")
        

    player[0]+=player[2]
    player[1]+=player[3]
    print(player[0],player[1])
     #COLLISION
    if  player[1]+50 >550:
        player[1] = 550-50
        isOnGround = True
        player[3] = 0


def draw_clouds():
    global offset
    for x in range(100, 800, 300): #Number of clouds
        for i in range(3):
            pygame.draw.circle(screen, (100, 100, 100), (x + offset, 100), 40)
            pygame.draw.circle(screen, (100, 100, 100), (x - 50 + offset, 125), 40)
            pygame.draw.circle(screen, (100, 100, 100), (x + 50 + offset, 125), 40)
        pygame.draw.rect(screen, (100, 100, 100), (x - 50 + offset, 100, 100, 65))



#___________________________________________________________________________________________________________
def draw_rocks():
    global offset
    for x in range(100, 800, 300): #Number of clouds
        for i in range(3):
            pygame.draw.rect(screen, (10, 10, 10), (x-25 + offset, 350, 50, 550))
        pygame.draw.circle(screen, (50, 50, 50), (x + offset, 325), 40)
        pygame.draw.circle(screen, (50, 50, 50), (x-50 + offset, 350), 40)
        pygame.draw.circle(screen, (50, 50, 50), (x+50 + offset, 350), 40) 

def draw_platforms():
    for i in range(len(platforms)):
        pygame.draw.rect(screen, (90, 90, 90), (platforms[i][0] + offset, platforms[i][1], 100, 30))
        if player[0]+50>platforms[i][0]+offset and player[0]<platforms[i][0]+100+offset and player[1]+50>platforms[i][1] and player[1]+50< platforms[i][1]+50:
            isOnGround = True
            #player[3]=platforms[i][1] - 50 #| #Player > 3 reverses gravity. 2 just fuckin sends you. 1 is, again, a teleporter. 0 is the same.
            player[3] -=3 #1 makes it a teleporter. 2 makes it Not solid. 3 makes it quicksand


for i in range(50):
    xPositions.append(random.randrange(0, 1000))
    yPositions.append(random.randrange(-1000, 0))
    
#___________________________________________________________________________________________________________
class Rainstorm:
    def __init__(self, x, y):
        self.xpos = x
        self.ypos = -y
    def move(self):
        self.xpos += random.randrange(-2, 3) # Left & Right
        self.ypos -= random.randrange(-29, 0) #Up & Down
        if self.ypos > 800:
            self.ypos = random.randrange(-10, 20) #reset rain
    def draw(self):
        pygame.draw.rect(screen, (240, 240, 255), (self.xpos, self.ypos, 2, 5))
        

rainstorm = []
for i in range(1000): #Amount
    rainstorm.append(Rainstorm(random.randrange(0, 1800), random.randrange(-1000, 0)))
#input & game loop
running = True
while running:
    clock.tick(60)
   
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = false
        
    keys = pygame.key.get_pressed()
    
    #Render helper
#    if event.type == pygame.MOUSEMOTION: #check if mouse moved
   #     mousePos = event.pos #refreshes mouse position
     #   print("mouse position: (",mousePos[0]," , ",mousePos[1], ")")
    
#fisics
    move_player()
        
    for i in range(len(rainstorm)):
        rainstorm[i].move()
        
#Render
    screen.fill((10, 10, 20))
    
    for i in range(len(rainstorm)):
        rainstorm[i].draw()
    
    screen.blit(background, (0 * 50, 0 * 2)) 
    draw_clouds()
    draw_rocks()
    draw_platforms()
    pygame.draw.rect(screen, (70, 100, 70), (player[0], player[1], 50, 50))

                                        #X,           Y,   X,   Y
    pygame.draw.rect(screen, (25, 14, 10), (-270 + offset, 550, 1500, 300))

    pygame.display.flip()
    
    
pygame.quit()

